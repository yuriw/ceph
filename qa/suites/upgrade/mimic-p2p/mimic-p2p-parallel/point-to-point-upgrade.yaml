meta:
- desc: |
   Run ceph on two nodes, using one of them as a client,
   with a separate client-only node. 
   Use xfs beneath the osds.
   install ceph/mimic v13.2.0 point version
   run workload and upgrade-sequence in parallel
   install ceph/mimic v13.2.1 point version
   run workload and upgrade-sequence in parallel
   install ceph/mimic v13.2.2 point version
   run workload and upgrade-sequence in parallel
   install ceph/mimic v13.2.x point version
   (every point reslease should be tested)
   run workload and upgrade-sequence in parallel
   install ceph/mimic latest version
   run workload and upgrade-sequence in parallel
overrides:
  ceph:
    log-whitelist:
    - reached quota
    - scrub
    - osd_map_max_advance
    - wrongly marked
    - FS_DEGRADED
    - POOL_APP_NOT_ENABLED
    - CACHE_POOL_NO_HIT_SET
    - POOL_FULL
    - SMALLER_PG
    - pool\(s\) full
    - OSD_DOWN
    - missing hit_sets
    - CACHE_POOL_NEAR_FULL
    - PG_AVAILABILITY
    - PG_DEGRADED
    - application not enabled
    - cache pools at or near target size
    - filesystem is degraded
    - OBJECT_MISPLACED
    fs: xfs
    conf:
      global:
        mon_warn_on_pool_no_app: false
      mon:
        mon debug unsafe allow tier with nonempty snaps: true
      osd:
        osd map max advance: 1000
        osd_class_load_list: "cephfs hello journal lock log numops rbd refcount 
                              replica_log rgw sdk statelog timeindex user version otp"
        osd_class_default_list: "cephfs hello journal lock log numops rbd refcount 
                                 replica_log rgw sdk statelog timeindex user version otp"
      client:
        rgw_crypt_require_ssl: false
        rgw crypt s3 kms encryption keys: testkey-1=YmluCmJvb3N0CmJvb3N0LWJ1aWxkCmNlcGguY29uZgo= testkey-2=aWIKTWFrZWZpbGUKbWFuCm91dApzcmMKVGVzdGluZwo=
roles:
- - mon.a
  - mds.a
  - osd.0
  - osd.1
  - osd.2
  - mgr.x
- - mon.b
  - mon.c
  - osd.3
  - osd.4
  - osd.5
  - client.0
- - client.1
openstack:
- volumes: # attached to each instance
    count: 3
    size: 30 # GB
tasks:
- print: "****  mimic v13.2.0 about to install"
- install:
    tag: v13.2.0
    # line below can be removed its from jewel test
    exclude_packages: ['python36-cephfs','python36-rados']
- print: "**** done v13.2.0 install"
- ceph:
   fs: xfs
   add_osds_to_crush: true
- print: "**** done ceph xfs"
- sequential:
   - workload
- print: "**** done workload v13.2.0"

#######  upgrade to v13.2.1
- install.upgrade:
    exclude_packages: ['python36-cephfs','python36-rados']
    mon.a:
      tag: v13.2.1
    mon.b:
      tag: v13.2.1
    # Note that client.a IS NOT upgraded at this point
- parallel:
   - workload_mimic
   - upgrade-sequence_mimic
- print: "**** done parallel mimic v13.2.1"
- parallel:
   - workload_mimic
   - upgrade-sequence_mimic
- print: "**** done workload v13.2.1"

#######  upgrade to v13.2.2
- install.upgrade:
    exclude_packages: ['python36-cephfs','python36-rados']
    mon.a:
      tag: v13.2.2
    mon.b:
      tag: v13.2.2
    # Note that client.a IS NOT upgraded at this point
- parallel:
   - workload_mimic
   - upgrade-sequence_mimic
- print: "**** done parallel mimic v13.2.2"
- parallel:
   - workload_mimic
   - upgrade-sequence_mimic
- print: "**** done workload v13.2.2"


#######  upgrade to v13.2.x TO BE ADDED for future point releases
### - install.upgrade:
###    #exclude_packages: ['ceph-mgr','libcephfs2','libcephfs-devel','libcephfs-dev','python34-cephfs','python34-rados']
###    mon.a:
###      tag: v13.2.x
###    mon.b:
###      tag: v13.2.x
###    # Note that client.a IS NOT upgraded at this point
###- parallel:
###   - workload_mimic
###   - upgrade-sequence_mimic
###- print: "**** done parallel mimic v13.2.x"
###- parallel:
###   - workload_mimic
###   - upgrade-sequence_mimic
###- print: "**** done workload v13.2.x"


####  upgrade to latest mimic
- install.upgrade:
    exclude_packages: ['python36-cephfs','python36-rados']
    mon.a:
    mon.b:
    # Note that client.a IS NOT upgraded at this point
- parallel:
   - workload_mimic
   - upgrade-sequence_mimic
- print: "**** done parallel mimic branch"

#######################
workload:
   sequential:
   - workunit:
       clients:
         client.0:
           - suites/blogbench.sh
workload_mimic:
   full_sequential:
   - workunit:
       tag: v13.2.0
       clients:
         client.1:
         - rados/test.sh
         - cls
       env:
         CLS_RBD_GTEST_FILTER: '*:-TestClsRbd.snapshots_namespaces'
   - print: "**** done rados/test.sh &  cls workload_mimic"
   - sequential:
     - rgw: [client.0]
     - print: "**** done rgw workload_mimic"
     - s3tests:
         client.0:
           force-branch: ceph-mimic
           rgw_server: client.0
           scan_for_encryption_keys: false
     - print: "**** done s3tests workload_mimic"
upgrade-sequence_mimic:
   sequential:
   - print: "**** done branch: mimic install.upgrade"
   - ceph.restart: [mds.a]
   - sleep:
       duration: 60
   - ceph.restart: [osd.0]
   - sleep:
       duration: 30
   - ceph.restart: [osd.1]
   - sleep:
       duration: 30
   - ceph.restart: [osd.2]
   - sleep:
       duration: 30
   - ceph.restart: [osd.3]
   - sleep:
       duration: 30
   - ceph.restart: [osd.4]
   - sleep:
       duration: 30
   - ceph.restart: [osd.5]
   - sleep:
       duration: 60
   - ceph.restart: [mon.a]
   - sleep:
       duration: 60
   - ceph.restart: [mon.b]
   - sleep:
       duration: 60
   - ceph.restart: [mon.c]
   - sleep:
       duration: 60
   - print: "**** done ceph.restart all mimic branch mds/osd/mon"
